<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Home</title>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH"
      crossorigin="anonymous"
    />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/notie/4.3.1/notie.min.css"
      integrity="sha512-UrjLcAek5jbj1vwGbXkviPHtgSNVNQCedX7cBIMDdSI2iZtUcZcoTh2Sqc8R9mVcijOjFUi1IlxhfrE1uWaIog=="
      crossorigin="anonymous"
      referrerpolicy="no-referrer"
    />
    <style>
      .chatbox {
        outline: 1px solid silver;
        min-height: 160px;
        padding: 0.5em;
      }
    </style>
  </head>
  <body>
    <div class="container">
      <div class="row">
        <div class="col">
          <h1 class="mt-3">This is the Home Page</h1>
          <hr />
        </div>
      </div>
      <div class="row">
        <div class="col-md-8">
          <h3 class="mb-4">Chat</h3>

          <div class="form-group mb-3">
            <label for="username" class="mb-1">Username:</label>
            <input
              type="text"
              name="username"
              id="username"
              class="form-control"
              autocomplete="false"
            />
          </div>
          <div class="form-group mb-4">
            <label for="message" class="mb-1">Message:</label>
            <input
              type="text"
              name="message"
              id="message"
              class="form-control"
              autocomplete="false"
            />
          </div>

          <hr />
          <a
            href="javascript:voiod(0)"
            class="btn btn-outline-secondary"
            id="sendBtn"
            >Send Message</a
          >
          <div id="status" class="mt-2 float-end"></div>
          <hr />

          <div id="output" class="chatbox"></div>
        </div>
        <div class="col-md-4">
          <h3>Who's Online?</h3>
          <ul id="online_users"></ul>
        </div>
      </div>
    </div>
  </body>
  <script
    src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
    crossorigin="anonymous"
  ></script>
  <script
    src="https://cdnjs.cloudflare.com/ajax/libs/notie/4.3.1/notie.min.js"
    integrity="sha512-NHRCwRf2LnVSlLDejCA9oS3fG3/FLSQIPCjAWl3M7tVi5wszwr6FxkjotWnQDXLE+aLKcxRrzFDNEgXj9nvkPw=="
    crossorigin="anonymous"
    referrerpolicy="no-referrer"
  ></script>
  <script src="/static/reconnecting-websocket.min.js"></script>
  <script>
    let socket = null;
    let chatbox = document.getElementById("output");
    window.onbeforeunload = () => {
      console.log("Leaving! Tata");
      let jsonData = {};
      jsonData["action"] = "left";
      socket.send(JSON.stringify(jsonData));
    };

    document.addEventListener("DOMContentLoaded", function () {
      socket = new ReconnectingWebSocket("ws://localhost:8080/ws", null, {
        debug: true,
        reconnectInterval: 3000,
      });

      const offline = `<span class="badge bg-danger">Not Connected</span>`;
      const online = `<span class="badge bg-success">Connected</span>`;
      let statusDiv = document.getElementById("status");

      socket.onopen = () => {
        console.log("Connected to WebSocket");
        statusDiv.innerHTML = online;
      };

      socket.onclose = () => {
        console.log("Connection closed!");
        statusDiv.innerHTML = offline;
      };

      socket.onerror = (err) => {
        console.log("There was an error");
        statusDiv.innerHTML = offline;
      };

      socket.onmessage = (res) => {
        console.log(res.data);
        let response = JSON.parse(res.data);
        console.log("Action is ", response.action);

        switch (response.action) {
          case "list_users":
            let ul = document.getElementById("online_users");
            while (ul.firstChild) ul.removeChild(ul.firstChild);

            if (response.connected_users.length > 0) {
              response.connected_users.forEach((user) => {
                let li = document.createElement("li");
                li.innerHTML = `<span style="color: yellow">${user}</span>`;

                ul.appendChild(li);
              });
            }
            break;
        }

        let currHTML = chatbox.innerHTML;
        if (response.message) {
          currHTML = currHTML + response.message + "<br/>";
        }
        chatbox.innerHTML = currHTML;
      };

      let userInput = document.getElementById("username");
      userInput.addEventListener("change", () => {
        let jsonData = {};
        jsonData["action"] = "username";
        jsonData["username"] = userInput.value;

        console.log({ jsonData });
        socket.send(JSON.stringify(jsonData));
      });

      let messageInput = document.getElementById("message");
      messageInput.addEventListener("keydown", (event) => {
        if (event.code === "Enter") {
          if (!socket) {
            console.log("no connection");
            return false;
          }
          event.preventDefault();
          event.stopPropagation();
          sendMessage();
        }
      });

      let sendBtn = document.getElementById("sendBtn");
      sendBtn.addEventListener("click", (event) => {
        if (!socket) {
          console.log("no connection");
          return false;
        }
        event.preventDefault();
        event.stopPropagation();
        sendMessage();
      });
    });

    const sendMessage = () => {
      let jsonData = {};
      jsonData["action"] = "broadcast";
      jsonData["username"] = document.getElementById("username").value;
      jsonData["message"] = document.getElementById("message").value;
      if (jsonData["username"] === "" || jsonData["message"] === "") {
        notieAlert("Fill username and message first");
        return;
      }
      socket.send(JSON.stringify(jsonData));
      document.getElementById("message").value = "";
    };

    const notieAlert = (message) => {
      notie.alert({
        type: "error", // optional, default = 4, enum: [1, 2, 3, 4, 5, 'success', 'warning', 'error', 'info', 'neutral']
        text: message,
        stay: false, // optional, default = false
        time: 5, // optional, default = 3, minimum = 1,
        position: "top", // optional, default = 'top', enum: ['top', 'bottom']
      });
    };
  </script>
</html>
